//////////////////////////////////////////////////////
// file: SagittaPlatform.h @ 2008-1-19 by Zhang Xiang
// declaration of the platform of Sagitta
//////////////////////////////////////////////////////
#ifndef __SAGITTAPLATFORM_H__
#define __SAGITTAPLATFORM_H__

// INCLUSIONS ////////////////////////////////////////

// DECLARATIONS //////////////////////////////////////
//namespace Sagitta{

#define SAGITTA_PLATFORM_WIN32 1
#define SAGITTA_PLATFORM_APPLE 2
#define SAGITTA_PLATFORM_LINUX 3

#define SAGITTA_COMPILER_MSVC 1
#define SAGITTA_COMPILER_GNUC 2
#define SAGITTA_COMPILER_BORL 3

#define SAGITTA_ENDIAN_LITTLE 1
#define SAGITTA_ENDIAN_BIG 2

#define SAGITTA_ARCHITECTURE_32 1
#define SAGITTA_ARCHITECTURE_64 2

/** current platform */
#if defined(__WIN32__) || defined(_WIN32)
#	define SAGITTA_PLATFORM SAGITTA_PLATFORM_WIN32
#elif defined(__APPLE_CC__) || defined(_APPLE_CC)
#	define SAGITTA_PLATFORM SAGITTA_PLATFORM_APPLE
#else
#	define SAGITTA_PLATFORM SAGITTA_PLATFORM_LINUX
#endif

/** arch type */
#if defined(__x86_64__) || defined(_M_X64)
#	define SAGITTA_ARCH_TYPE SAGITTA_ARCHITECTURE_64
#else
#	define SAGITTA_ARCH_TYPE SAGITTA_ARCHITECTURE_32
#endif

/** Windows Settings */
#if SAGITTA_PLATFORM == SAGITTA_PLATFORM_WIN32
#	if defined(SAGITTA_STATIC_LIB)
#		define _SG_CommonExport
#		define _SG_MathExport
#		define _SG_KernelExport
#		define _SG_DemoExport
#	else
#		define _SG_CommonExport

#		if defined(SAGITTA_MATH)
#			define _SG_MathExport __declspec(dllexport)
#		else
#			define _SG_MathExport __declspec(dllimport)
#		endif

#		if defined(SAGITTA_KERNEL)
#			define _SG_KernelExport __declspec(dllexport)
#		else
#			define _SG_KernelExport __declspec(dllimport)
#		endif

// for win32, demo lib contains the entry function WinMain
// it has to be static lib
#			define _SG_DemoExport
//#		if defined(SAGITTA_DEMO)
//#			define _SG_DemoExport __declspec(dllexport)
//#		else
//#			define _SG_DemoExport __declspec(dllimport)
//#		endif
#	endif

#	define SAGITTA_UNICODE_SUPPORT 1
#endif

/** Apple/Linux Settings */
#if SAGITTA_PLATFORM == SAGITTA_PLATFORM_APPLE || SAGITTA_PLATFORM == SAGITTA_PLATFORM_LINUX
#	define _SG_CommonExport
#	define _SG_MathExport
#	define _SG_KernelExport
#	define _SG_DemoExport

	// A quick define to overcome different names for the same function
#   define stricmp strcasecmp

	// Always enable unicode support for the moment
	// Perhaps disable in old versions of gcc if necessary
#	define OGRE_UNICODE_SUPPORT 1
#endif

/** disable UNICODE */
#ifdef UNICODE
#undef UNICODE
#endif
//}


#ifndef SERIALIZE_LOAD_ARCHIVE
#define SERIALIZE_LOAD_ARCHIVE Sagitta::serialization::sgInXmlArchive
#define SERIALIZE_SAVE_ARCHIVE Sagitta::serialization::sgOutXmlArchive
#endif

#ifndef SERIALIZE_BEGIN
#define SERIALIZE_BEGIN(classname) \
    template<class Archive> friend Archive &operator & (Archive &archive, classname&);
#endif

#ifndef SERIALIZE_END
#define SERIALIZE_END
#endif

// Turn off warnings generated by long std templates
// This warns about truncation to 255 characters in debug/browse info
#   pragma warning (disable : 4786)

// Turn off warnings generated by long std templates
// This warns about truncation to 255 characters in debug/browse info
#   pragma warning (disable : 4503)

// disable: "conversion from 'double' to 'float', possible loss of data
#   pragma warning (disable : 4244)

// disable: "truncation from 'double' to 'float'
#   pragma warning (disable : 4305)

// disable: "<type> needs to have dll-interface to be used by clients'
// Happens on STL member variables which are not public therefore is ok
#   pragma warning (disable : 4251)

// disable: "non dll-interface class used as base for dll-interface class"
// Happens when deriving from Singleton because bug in compiler ignores
// template export
#   pragma warning (disable : 4275)

// disable: "C++ Exception Specification ignored"
// This is because MSVC 6 did not implement all the C++ exception
// specifications in the ANSI C++ draft.
#   pragma warning( disable : 4290 )

// disable: "no suitable definition provided for explicit template
// instantiation request" Occurs in VC7 for no justifiable reason on all
// #includes of Singleton
#   pragma warning( disable: 4661)

// disable: deprecation warnings when using CRT calls in VC8
// These show up on all C runtime lib code in VC8, disable since they clutter
// the warnings with things we may not be able to do anything about (e.g.
// generated code from nvparse etc). I doubt very much that these calls
// will ever be actually removed from VC anyway, it would break too much code.
#	pragma warning( disable: 4996)

// disable: "conditional expression constant", always occurs on 
// OGRE_MUTEX_CONDITIONAL when no threading enabled
#   pragma warning (disable : 201)

// DEFINITIONS ///////////////////////////////////////

#endif // __SAGITTAPLATFORM_H__